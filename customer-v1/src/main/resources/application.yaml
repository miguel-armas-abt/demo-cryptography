server:
  port: 8081

spring:
  application:
    name: customer-v1

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: false
        format_sql: true
    defer-datasource-initialization: true #read data.sql file after schema generation by hibernate

  h2:
    console:
      enabled: true #http://localhost:8081/h2-console/
      settings:
        web-allow-others: true
  datasource:
    url: jdbc:h2:mem:customers_db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    platform: h2
    username: admin
    password: ${H2_PASSWORD:qwerty}

configuration:
  error-messages:
    Default: No hemos podido realizar tu operaci√≥n. Estamos trabajando para solucionar el inconveniente.

  rest-clients:
    cryptography-v1:
      request:
        endpoint: ${CRYPTOGRAPHY_V1_ENDPOINT:http://localhost:8080/poc/cryptography/v1/encryption}
        headers:
          provided:
            encryptionMethod: ${CRYPTOGRAPHY_V1_HEADER_ENCRYPTION_METHOD:AES}
            feature: ${CRYPTOGRAPHY_V1_HEADER_FEATURE:customers}
          forwarded:
            channelId: channelId
          auto-generated:
            timestamp: TIMESTAMP
          tracing:
            traceParent: TRACE_PARENT
      performance:
        timeout: GOOD
        concurrency: MEDIUM

# actuator endpoints
management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus, beans, env, loggers, flyway
  endpoint:
    health:
      show-details: always
      probes: #livess & readiness probe
        enabled: true